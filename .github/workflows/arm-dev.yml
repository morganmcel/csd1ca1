name: CreateAzureWebAppDEV       

env:
  AZURE_WEBAPP_PACKAGE_PATH: 'publish'              # set this to the path to your web app project

on: 
 push:
   branches: [ develop ]
 
jobs:

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

      # Checkout code
    - uses: actions/checkout@main
      with:
        ref: develop

      # Log into Azure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Generate random WebAppName
      run: echo AZURE_WEBAPP_NAME=bmi-$(openssl rand -hex 2) >> $GITHUB_ENV
      run: echo URI='${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net' >> $GITHUB_ENV

      # Deploy ARM template
    - name: Run ARM deploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: IAC-Templates/mstemplate.json
        parameters: webAppName=${{ env.AZURE_WEBAPP_NAME }}

    - name: Get WebApp/FunctionApp publish profile
      id: webapp-dev
      uses: aliencube/publish-profile-actions@v1
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      with:
        resourceGroupName: ${{ secrets.AZURE_RG }}
        appName: ${{ env.AZURE_WEBAPP_NAME }}

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: '5.0.x'
    - name: Build for Release
      run: dotnet build --configuration Release
    - name: Run unit tests
      run: dotnet test TestProject1/TestProject1.csproj --no-restore --collect "Code coverage" -l:trx
  
    - name: Publish Unit Test Results
      uses: dorny/test-reporter@v1
      with:
       name: MS Tests                  
       path: '**.trx'
       reporter: 'dotnet-trx'                     
       artifact: ''

    - name: Pull Docker image for ZAP
      run: docker pull owasp/zap2docker-weekly

    - name: Run baseline scan
      run: docker run -v /report:/zap/wrk/:rw --user root -t owasp/zap2docker-weekly zap-baseline.py -t ${{env.URI}} -I -r zapreport.html
  
    - uses: actions/upload-artifact@v2
      name: upload ZAP report
      with:
        name: ZAPreport
        path: /report/zapreport.html

    - name: Publish
      run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp' 

# Deploy to Azure Web apps
    - name: Run Azure webapp deploy action using publish profile credentials
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }}                        # your app name
        publish-profile: ${{ steps.webapp-dev.outputs.profile }} # Retrieved from step above
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'